//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsService1.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WindowsService1.Properties.strings", typeof(strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt; Please enter a username before you enter: .
        /// </summary>
        internal static string CHAT_ASKUSERNAME {
            get {
                return ResourceManager.GetString("CHAT_ASKUSERNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt; See you next time {0}!.
        /// </summary>
        internal static string CHAT_BYEMSG {
            get {
                return ResourceManager.GetString("CHAT_BYEMSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt; [Type #quit to leave this server]
        ///&gt;&gt; [Type #list to list the users in the server]
        ///&gt;&gt; Enjoy yourself!.
        /// </summary>
        internal static string CHAT_COMMANDS {
            get {
                return ResourceManager.GetString("CHAT_COMMANDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt; Nice! Your assigned username will be {0}.
        /// </summary>
        internal static string CHAT_GOAHEAD {
            get {
                return ResourceManager.GetString("CHAT_GOAHEAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt; {0} joined the room!.
        /// </summary>
        internal static string CHAT_JOINNOTICE {
            get {
                return ResourceManager.GetString("CHAT_JOINNOTICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt; {0} left the room....
        /// </summary>
        internal static string CHAT_LEFTNOTICE {
            get {
                return ResourceManager.GetString("CHAT_LEFTNOTICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt; The following users are connected to this server .
        /// </summary>
        internal static string CHAT_LIST {
            get {
                return ResourceManager.GetString("CHAT_LIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  &gt;&gt; .
        /// </summary>
        internal static string CHAT_MSGSEPARATOR {
            get {
                return ResourceManager.GetString("CHAT_MSGSEPARATOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt; Users with same username connecting from the same ip are not allowed. Try again please!.
        /// </summary>
        internal static string CHAT_MULTIPLEUSERSKICKED {
            get {
                return ResourceManager.GetString("CHAT_MULTIPLEUSERSKICKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt; C&apos;mon don&apos;t be shy... give us a name.
        /// </summary>
        internal static string CHAT_REASKUSERNAME {
            get {
                return ResourceManager.GetString("CHAT_REASKUSERNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -------------------------
        /// [SharpChat Service Server v1.0]
        ///-------------------------.
        /// </summary>
        internal static string CHAT_WELCOME {
            get {
                return ResourceManager.GetString("CHAT_WELCOME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception while on routine with client {0}.
        /// </summary>
        internal static string SRV_EXCEPTION {
            get {
                return ResourceManager.GetString("SRV_EXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SocketException: {0}.
        /// </summary>
        internal static string SRV_SOCKETEXCEPTION {
            get {
                return ResourceManager.GetString("SRV_SOCKETEXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client {0} connected at port {1}.
        /// </summary>
        internal static string SRV_USERCONNECT {
            get {
                return ResourceManager.GetString("SRV_USERCONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client {0} disconnected from port {1}.
        /// </summary>
        internal static string SRV_USERDISCONNECT {
            get {
                return ResourceManager.GetString("SRV_USERDISCONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service listening on port nº {0}.
        /// </summary>
        internal static string SRV_WELCOME {
            get {
                return ResourceManager.GetString("SRV_WELCOME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect on cfg port, trying default port.
        /// </summary>
        internal static string SVC_FAILED_PORT_CFG {
            get {
                return ResourceManager.GetString("SVC_FAILED_PORT_CFG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect on default port, ending service.
        /// </summary>
        internal static string SVC_FAILED_PORT_DEFAULT {
            get {
                return ResourceManager.GetString("SVC_FAILED_PORT_DEFAULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config file not found, trying to load on default port.
        /// </summary>
        internal static string SVC_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("SVC_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port sucessfully loaded from cfg file: {0}.
        /// </summary>
        internal static string SVC_PORTFILE_OK {
            get {
                return ResourceManager.GetString("SVC_PORTFILE_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server thread ended.
        /// </summary>
        internal static string SVC_SERVER_ENDED {
            get {
                return ResourceManager.GetString("SVC_SERVER_ENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chatroom service started, trying to load on config port.
        /// </summary>
        internal static string SVC_START {
            get {
                return ResourceManager.GetString("SVC_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service stopped, ran for {0}s.
        /// </summary>
        internal static string SVC_STOP {
            get {
                return ResourceManager.GetString("SVC_STOP", resourceCulture);
            }
        }
    }
}
